# Generated by Django 5.2.4 on 2025-08-08 01:52

import Files_Endpoints.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserQuota',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='quota', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('limit_bytes', models.BigIntegerField(default=107374182400, help_text='Storage limit in bytes (default: 100 GB)')),
                ('used_bytes', models.BigIntegerField(default=0, help_text='Currently used storage in bytes')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Quota',
                'verbose_name_plural': 'User Quotas',
                'db_table': 'files_user_quota',
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', Files_Endpoints.models.EncryptedCharField(help_text='Folder name (encrypted)', max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subfolders', to='Files_Endpoints.folder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
                'db_table': 'files_folder',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', Files_Endpoints.models.EncryptedCharField(help_text='Original filename (encrypted)', max_length=255)),
                ('mime_type', models.CharField(help_text='MIME type of the file', max_length=255)),
                ('size_bytes', models.BigIntegerField(help_text='File size in bytes')),
                ('data_blob', Files_Endpoints.models.EncryptedBinaryField(help_text='Binary file data stored in database (encrypted)')),
                ('is_favorite', models.BooleanField(default=False, help_text='Whether file is marked as favorite')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to=settings.AUTH_USER_MODEL)),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='Files_Endpoints.folder')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
                'db_table': 'files_file',
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission', models.CharField(choices=[('download_only', 'Download Only'), ('can_upload', 'Can Upload')], default='download_only', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='Files_Endpoints.folder')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_shares', to=settings.AUTH_USER_MODEL)),
                ('target_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Share',
                'verbose_name_plural': 'Shares',
                'db_table': 'files_share',
            },
        ),
        migrations.AddIndex(
            model_name='folder',
            index=models.Index(fields=['deleted_at'], name='files_folde_deleted_b26502_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='folder',
            unique_together={('user', 'parent', 'name', 'deleted_at')},
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['uploaded_at'], name='files_file_uploade_726d10_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['is_favorite'], name='files_file_is_favo_340ec9_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['deleted_at'], name='files_file_deleted_007431_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['mime_type'], name='files_file_mime_ty_57dbdc_idx'),
        ),
        migrations.AddIndex(
            model_name='share',
            index=models.Index(fields=['expires_at'], name='files_share_expires_41f2fd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='share',
            unique_together={('owner', 'target_user', 'folder')},
        ),
    ]
