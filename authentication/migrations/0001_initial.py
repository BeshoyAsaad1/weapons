# Generated by Django 5.2.4 on 2025-08-07 21:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(help_text='Azure AD Object ID for Azure users, email for regular users', max_length=255, unique=True)),
                ('email', models.EmailField(help_text='User email address', max_length=254, unique=True)),
                ('email_hash', models.CharField(blank=True, db_index=True, help_text='SHA256 hash of email for Oracle filtering', max_length=64)),
                ('username_hash', models.CharField(blank=True, db_index=True, help_text='SHA256 hash of username for Oracle filtering', max_length=64)),
                ('auth_type', models.CharField(choices=[('regular', 'Regular Email/Password'), ('azure', 'Azure AD SSO')], default='regular', help_text='Authentication type used for this user', max_length=20)),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Administrator'), ('super_admin', 'Super Administrator')], default='user', help_text='User role in the system', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this user account is active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='When the user account was created')),
                ('first_name', models.CharField(blank=True, help_text='User first name from Azure AD', max_length=150)),
                ('last_name', models.CharField(blank=True, help_text='User last name from Azure AD', max_length=150)),
                ('last_login', models.DateTimeField(blank=True, help_text='Last time user logged in', null=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name of the group', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the group')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the group was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the group was last updated')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_group_admin', models.BooleanField(default=False, help_text='Whether the user is an admin of this group')),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the user joined the group')),
                ('group', models.ForeignKey(help_text='Group the user belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='authentication.group')),
                ('user', models.ForeignKey(help_text='User in the group', on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Group Membership',
                'verbose_name_plural': 'User Group Memberships',
                'ordering': ['group__name', 'user__email'],
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Groups this user belongs to', related_name='users', through='authentication.UserGroup', to='authentication.group'),
        ),
    ]
