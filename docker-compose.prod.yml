version: '3.8'

services:
  # Django application service (production - uses external Oracle database)
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: weaponbackend_web_prod
    command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 --workers 4 --threads 2 --timeout 120 --access-logfile /app/logs/gunicorn-access.log --error-logfile /app/logs/gunicorn-error.log weaponpowercloud_backend.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    expose:
      - "8000"
    env_file:
      - .env
    networks:
      - weapon_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis service for caching
  redis:
    image: redis:7-alpine
    container_name: weaponbackend_redis_prod
    volumes:
      - redis_data:/data
    networks:
      - weapon_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: weaponbackend_nginx_prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - weapon_network
    restart: unless-stopped

volumes:
  redis_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  weapon_network:
    driver: bridge
