version: '3.8'

services:
  # Redis service for caching and WebSocket support
  redis:
    image: redis:7-alpine
    container_name: weaponbackend_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - weapon_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django application service (uses external Oracle database)
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weaponbackend_web
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - weapon_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: weaponbackend_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - weapon_network
    restart: unless-stopped

volumes:
  redis_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  weapon_network:
    driver: bridge
