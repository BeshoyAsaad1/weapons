# Generated by Django 5.2.4 on 2025-08-25 12:11

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('websocket_enabled', models.BooleanField(default=True, help_text='Receive real-time notifications via WebSocket')),
                ('survey_assigned_enabled', models.BooleanField(default=True, help_text='Receive notifications when surveys are assigned')),
                ('survey_completed_enabled', models.BooleanField(default=True, help_text='Receive notifications when surveys are completed')),
                ('survey_shared_enabled', models.BooleanField(default=True, help_text='Receive notifications when surveys are shared')),
                ('admin_messages_enabled', models.BooleanField(default=True, help_text='Receive admin messages')),
                ('system_alerts_enabled', models.BooleanField(default=True, help_text='Receive system alerts')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='en', help_text='Preferred language for notifications', max_length=5)),
                ('quiet_hours_enabled', models.BooleanField(default=False, help_text='Enable quiet hours (no notifications during specified time)')),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start time for quiet hours (UAE timezone)', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End time for quiet hours (UAE timezone)', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When preferences were created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When preferences were last updated')),
                ('user', models.OneToOneField(help_text='User these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.JSONField(help_text='Notification title in multiple languages {"en": "...", "ar": "..."}')),
                ('body', models.JSONField(help_text='Notification body in multiple languages {"en": "...", "ar": "..."}')),
                ('notification_type', models.CharField(choices=[('survey_assigned', 'Survey Assigned'), ('survey_completed', 'Survey Completed'), ('survey_shared', 'Survey Shared'), ('survey_updated', 'Survey Updated'), ('survey_deleted', 'Survey Deleted'), ('admin_message', 'Admin Message'), ('system_alert', 'System Alert'), ('user_mention', 'User Mention'), ('group_invitation', 'Group Invitation'), ('response_received', 'Response Received')], default='admin_message', help_text='Type of notification', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', help_text='Priority level of the notification', max_length=20)),
                ('action_url', models.URLField(blank=True, help_text='Optional URL to navigate when notification is clicked', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata as JSON (survey_id, response_id, etc.)')),
                ('is_read', models.BooleanField(default=False, help_text='Whether the notification has been read')),
                ('read_at', models.DateTimeField(blank=True, help_text='When the notification was read', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the notification was created')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the notification expires (optional)', null=True)),
                ('sent_via_websocket', models.BooleanField(default=False, help_text='Whether notification was sent via WebSocket')),
                ('websocket_sent_at', models.DateTimeField(blank=True, help_text='When notification was sent via WebSocket', null=True)),
                ('recipient', models.ForeignKey(help_text='User who will receive this notification', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, help_text='User who triggered this notification (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_4e3567_idx'), models.Index(fields=['recipient', 'created_at'], name='notificatio_recipie_f39341_idx'), models.Index(fields=['notification_type'], name='notificatio_notific_f2898f_idx'), models.Index(fields=['expires_at'], name='notificatio_expires_4f3289_idx')],
            },
        ),
    ]
