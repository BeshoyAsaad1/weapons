# Generated by Django 5.2.4 on 2025-08-02 19:34

import django.db.models.deletion
import surveys.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', surveys.models.EncryptedCharField(help_text='Survey title (encrypted)', max_length=255)),
                ('title_hash', models.CharField(blank=True, help_text='SHA256 hash of title for search indexing', max_length=64)),
                ('description', surveys.models.EncryptedTextField(blank=True, help_text='Survey description (encrypted)')),
                ('visibility', models.CharField(choices=[('PRIVATE', 'Creator & shared list'), ('AUTH', 'All authenticated users'), ('PUBLIC', 'Everyone, even anonymous')], default='PRIVATE', help_text='Survey visibility level', max_length=7)),
                ('is_locked', models.BooleanField(default=False, help_text='Whether survey is locked for editing')),
                ('is_active', models.BooleanField(default=True, help_text='Whether survey is active and accepting responses')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('creator', models.ForeignKey(help_text='User who created this survey', on_delete=django.db.models.deletion.CASCADE, related_name='created_surveys', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, help_text='Users who can access this private survey', related_name='shared_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'db_table': 'surveys_survey',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_complete', models.BooleanField(default=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('respondent', models.ForeignKey(blank=True, help_text='Null for anonymous responses', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_responses', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.survey')),
            ],
            options={
                'verbose_name': 'Response',
                'verbose_name_plural': 'Responses',
                'db_table': 'surveys_response',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', surveys.models.EncryptedTextField(help_text='Question text (encrypted)')),
                ('text_hash', models.CharField(blank=True, help_text='SHA256 hash of question text for search indexing', max_length=64)),
                ('question_type', models.CharField(choices=[('text', 'Text Input'), ('textarea', 'Long Text'), ('single_choice', 'Single Choice'), ('multiple_choice', 'Multiple Choice'), ('rating', 'Rating Scale'), ('yes_no', 'Yes/No')], default='text', max_length=20)),
                ('options', surveys.models.EncryptedTextField(blank=True, help_text='JSON array of options for choice questions (encrypted)')),
                ('is_required', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.survey')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'db_table': 'surveys_question',
                'ordering': ['survey', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer_text', surveys.models.EncryptedTextField(help_text='Answer content (encrypted)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.question')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.response')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'db_table': 'surveys_answer',
                'indexes': [models.Index(fields=['response'], name='surveys_ans_respons_798aa9_idx'), models.Index(fields=['question'], name='surveys_ans_questio_9e381c_idx')],
                'unique_together': {('response', 'question')},
            },
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['creator'], name='surveys_sur_creator_d5c7e5_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['visibility'], name='surveys_sur_visibil_4cf541_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['is_active'], name='surveys_sur_is_acti_dc120c_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['created_at'], name='surveys_sur_created_9f7bbb_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['deleted_at'], name='surveys_sur_deleted_8e8ae0_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['title_hash'], name='surveys_sur_title_h_65f9d5_idx'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['survey'], name='surveys_res_survey__bb39ec_idx'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['respondent'], name='surveys_res_respond_92ba40_idx'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['submitted_at'], name='surveys_res_submitt_95b24b_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['survey'], name='surveys_que_survey__1096d0_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['order'], name='surveys_que_order_bb46a2_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['text_hash'], name='surveys_que_text_ha_5cd9a1_idx'),
        ),
    ]
